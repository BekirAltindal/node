# Dockerfile for VILLASnode development.
#
# This Dockerfile builds an image which contains all library dependencies
# and tools to build VILLASnode.
# However, VILLASnode itself it not part of the image.
#
# This image can be used for developing VILLASnode
# by running:
#   make docker
#
# @author Steffen Vogel <stvogel@eonerc.rwth-aachen.de>
# @copyright 2014-2020, Institute for Automation of Complex Power Systems, EONERC
# @license GNU General Public License (version 3)
#
# VILLASnode
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###################################################################################

# You can choose between Debian and Ubuntu here
FROM debian:buster

ARG GIT_REV=unknown
ARG GIT_BRANCH=unknown
ARG VERSION=unknown
ARG VARIANT=unknown

ARG ARCH=armhf
ARG TRIPLET=arm-linux-gnueabihf

ENV DEBIAN_FRONTEND=noninteractive

# Enable ${ARCH} architecture
RUN dpkg --add-architecture ${ARCH}

# Toolchain
RUN apt-get update && apt-get install -y \
	crossbuild-essential-${ARCH} \
	pkg-config make ninja-build \
	texinfo git mercurial curl tar wget\
	protobuf-compiler protobuf-c-compiler

# Dependencies
RUN apt-get update && apt-get install -y \
	libssl-dev:${ARCH} \
	libprotobuf-dev:${ARCH} \
	libprotobuf-c-dev:${ARCH} \
	uuid-dev:${ARCH} \
	libconfig-dev:${ARCH} \
	libnl-3-dev libnl-route-3-dev:${ARCH} \
	libcurl4-openssl-dev:${ARCH} \
	libjansson-dev:${ARCH} \
	libzmq3-dev:${ARCH} \
	libnanomsg-dev:${ARCH} \
	librabbitmq-dev:${ARCH} \
	libmosquitto-dev:${ARCH} \
	libcomedi-dev:${ARCH} \
	libibverbs-dev:${ARCH} \
	librdmacm-dev:${ARCH} \
	libre-dev:${ARCH} \
	libusb-1.0-0-dev:${ARCH}

# Install cmake (version from buster has a bug)
RUN cd /tmp && \
    wget https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3-Linux-x86_64.sh && \
    chmod +x cmake-3.15.3-Linux-x86_64.sh && \
    ./cmake-3.15.3-Linux-x86_64.sh --skip-license --prefix=/usr && \
    rm -rf /tmp/*

ADD cmake/toolchains/debian-${ARCH}.cmake /

ENV PKG_CONFIG_PATH=/usr/lib/${TRIPLET}/pkgconfig:/usr/local/lib/pkgconfig:/usr/share/pkgconfig
ENV PKG_CONFIG_LIBDIR=/usr/lib/${TRIPLET}/pkgconfig:/usr/share/pkgconfig

ENV CMAKE_OPTS="-DCMAKE_TOOLCHAIN_FILE=/debian-${ARCH}.cmake \
			   -DCMAKE_INSTALL_LIBDIR=/usr/lib/${TRIPLET}"
			   
# Build & Install fmtlib
RUN cd /tmp && \
   git clone --recursive https://github.com/fmtlib/fmt.git && \
   mkdir -p fmt/build && cd fmt/build && \
   git checkout 5.2.0 && \
   cmake ${CMAKE_OPTS} -DBUILD_SHARED_LIBS=1 .. && make -j$(nproc) install && \
   rm -rf /tmp/fmt
			   
# Build & Install spdlog
RUN cd /tmp && \
   git clone --recursive https://github.com/gabime/spdlog.git && \
   mkdir -p spdlog/build && cd spdlog/build && \
   git checkout v1.3.1 && \
   cmake ${CMAKE_OPTS} -DCMAKE_BUILD_TYPE=Release -DSPDLOG_FMT_EXTERNAL=1 -DSPDLOG_BUILD_BENCH=OFF .. && make -j$(nproc) install && \
   rm -rf /tmp/spdlog

# Build & Install libwebsockets
RUN cd /tmp && \
	git clone -b v3.1-stable https://github.com/warmcat/libwebsockets && \
	mkdir -p libwebsockets/build && cd libwebsockets/build && \
	cmake ${CMAKE_OPTS}	-DLWS_INSTALL_LIB_DIR=/usr/lib/${TRIPLET} -DLWS_WITHOUT_TESTAPPS=ON .. && make -j$(nproc) install && \
	rm -rf /tmp/libwebsockets

# Build & Install libiec61850
RUN cd /tmp && \
	git clone -b v1.3.1 https://github.com/mz-automation/libiec61850 && \
	mkdir -p libiec61850/build && cd libiec61850/build && \
	cmake ${CMAKE_OPTS} .. && make -j$(nproc) install && \
	rm -rf /tmp/libiec61850

# Build & Install uldaq
RUN apt-get -y install automake autoconf libtool
RUN cd /tmp && \
	git clone -b rpm https://github.com/stv0g/uldaq && \
	mkdir -p uldaq/build && cd uldaq && \
	autoreconf -i && cd build && \
	../configure --host=${TRIPLET} && make -j$(nproc) install && \
	rm -rf /tmp/uldaq

# Build & Install EtherLab
RUN cd /tmp && \
	hg clone --branch stable-1.5 http://hg.code.sf.net/p/etherlabmaster/code etherlab && \
	cd etherlab && \
	./bootstrap && ./configure --enable-userlib=yes --enable-kernel=no --enable-tool=no && \
	make -j$(nproc) install && \
	rm -rf /tmp/etherlab

WORKDIR /villas
ENTRYPOINT bash

LABEL \
	org.label-schema.schema-version="1.0" \
	org.label-schema.name="VILLASnode" \
	org.label-schema.license="GPL-3.0" \
	org.label-schema.vcs-ref="$GIT_REV" \
	org.label-schema.vcs-branch="$GIT_BRANCH" \
	org.label-schema.version="$VERSION" \
	org.label-schema.variant="$VARIANT" \
	org.label-schema.vendor="Institute for Automation of Complex Power Systems, RWTH Aachen University" \
	org.label-schema.author.name="Steffen Vogel" \
	org.label-schema.author.email="stvogel@eonerc.rwth-aachen.de" \
	org.label-schema.description="A image containing all build-time dependencies for VILLASnode based on Ubuntu" \
	org.label-schema.url="http://fein-aachen.org/projects/villas-framework/" \
	org.label-schema.vcs-url="https://git.rwth-aachen.de/acs/public/villas/node" \
	org.label-schema.usage="https://villas.fein-aachen.org/doc/node-installation.html#node-installation-docker"
