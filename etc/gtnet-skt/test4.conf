/** GTNET-SKT test configuration.
 *
 * The syntax of this file is similar to JSON.
 * A detailed description of the format can be found here:
 *   http://www.hyperrealm.com/libconfig/libconfig_manual.html#Configuration-Files
 *
 * @author Steffen Vogel <svogel2@eonerc.rwth-aachen.de>
 * @copyright 2014-2022, Institute for Automation of Complex Power Systems, EONERC
 * @license GNU General Public License (version 3)
 *
 * VILLASnode
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *********************************************************************************/

logging = {
	level = "debug"
}

nodes = {
	node1 = {
		type = "socket"
		
		format = "gtnet"

		in = {
			address = "134.130.169.31:12002"	# Local ip:port, use '*' for random port
		}
		out = {
			address = "134.130.169.98:12001"
		}

		netem = {
			enabled = false
			delay = 1000000				# In micro seconds!
			jitter = 300000
			distribution = "normal"
		}
	},
	node2 = {
		type = "socket"
		
		format = "gtnet"

		in = {
			address = "192.168.88.128:12004"	# Local ip:port, use '*' for random port
		}
		out = {
			address = "192.168.88.129:12001"
		}
	}
}

paths = (
	{
		in = "node1",				# Name of the node we listen to (see above)
		out = "node1",				# And we loop back to the origin

		hooks = (
			{
				type = "print"
			}
		)
	}
)
