<?xml version="1.0" ?>
<tm>
    <child attributes="[]" type="'TestFile'">
        <modelname>'AsyncIP_sl.mdl'</modelname>
        <name>'Execute'</name>
        <rtlabInfo attributes="['paramIn','paramOut']">{"modelName": ''}</rtlabInfo>
        <platformList attributes="['paramIn']">''</platformList>
        <targetList attributes="['paramIn']">''</targetList>
        <compilState attributes="['paramIn']">''</compilState>
        <preExpression>'variables.testFile.name="Execute " + variables.testFile.modelname  + " model";variables.testFile.rtlabInfo["modelName"] = variables.testFile.filePath + "/../models/Simulink/" + variables.testFile.modelname'</preExpression>
		<result><platformResult>['', '', '', '']</platformResult></result>
		<targetIdx>0</targetIdx>

        <child type="'Loop'">
            <name>'Platform Loop'</name>
            <initExpression>'global platformIndex;platformIndex=0'</initExpression>
            <conditionExpression>'platformIndex&lt;len(variables.testFile.platformList)'</conditionExpression>
            <incrementExpression>'platformIndex+=1'</incrementExpression>
	    
			<child type="'Test'">
			<name>'Test - Execute example sequences'</name>
			<preCondition>'variables.testFile.platformList[platformIndex] == 1'</preCondition>
			<postExpression>'variables.testFile.targetIdx += 1'</postExpression>
				
				<child type="'Step'">
					<name>'step setplatform'</name>
					<type>'RT-LAB/SetConfiguration'</type>
					<preCondition>'True'</preCondition>	
					<configuration>{'TargetPlatform': -1}</configuration>
					<preExpression>'variables.step.configuration["TargetPlatform"]=variables.root.platformListName[platformIndex]'</preExpression>
					<paramIn>'variables.testFile.rtlabInfo, variables.step.configuration'</paramIn>
					<paramOut>'variables.testFile.rtlabInfo'</paramOut>
				</child>

				<child type="'Step'">
					<name>'step async. proc. compilation command'</name>
					<type>'RT-LAB/SetConfiguration'</type>					
					<commandListPerPlatform>["","make -f /usr/opalrt/common/bin/opalmodelmk","/usr/bin/make -f /usr/opalrt/common/bin/opalmodelmk",""]</commandListPerPlatform>
					<postCondition>'True'</postCondition>	
					<configuration>{'TargetCompileCmd': -1}</configuration>
					<preExpression>'variables.step.configuration["TargetCompileCmd"]=variables.step.commandListPerPlatform[platformIndex]'</preExpression>
					<paramIn>'variables.testFile.rtlabInfo, variables.step.configuration'</paramIn>
					<paramOut>'variables.testFile.rtlabInfo'</paramOut>
				</child>

				<child type="'Step'">
					<name>'Run CompileModel sequence'</name>
					<preCondition>'variables.root.platformListName[platformIndex] != RtlabApi.REDHAWK64_TARGET'</preCondition>
					<type>'SequenceCall'</type>
					<mode>'dynamic'</mode>
					<preExpression>''</preExpression>
					<sequenceFilename>'variables.root.testPath + "/utils/sequence/compileModel.tms"'</sequenceFilename>
					<paramIn>'variables.testFile.rtlabInfo,variables.testFile.compilState'</paramIn>
					<paramOut>'variables.testFile.rtlabInfo'</paramOut>
					<postExpression>''</postExpression>
				 </child>

				<child type="'Step'">
					<name>'Run testCompileModel sequence'</name>
					<preCondition>'variables.root.platformListName[platformIndex] == RtlabApi.REDHAWK64_TARGET'</preCondition>
					<type>'SequenceCall'</type>
					<mode>'dynamic'</mode>
					<sequenceFilename>'variables.root.testPath + "/utils/sequence/testCompileModel.tms"'</sequenceFilename>
					<paramIn>'variables.testFile.rtlabInfo'</paramIn>
					<paramOut>'variables.testFile.rtlabInfo'</paramOut>
					<postExpression>''</postExpression>
				</child>
			</child>   

			<child type="'Step'">
	        	<name>'Validation'</name>
				<type>'Expression'</type>
			    <group>'cleanup'</group>
			    <paramIn>''</paramIn>
			    <paramOut>''</paramOut>
				<preExpression>'variables.testFile.result.platformResult[platformIndex] = variables.step._getParent().children["Test - Execute example sequences"].result.status'</preExpression>
			</child>	
		</child>

		<child type="'Step'">
			<name>'Test loop result'</name>
			<type>'Expression'</type>
			<group>'cleanup'</group>
			<paramIn>''</paramIn>
			<paramOut>''</paramOut>
			<preExpression>''</preExpression>
			<postExpression>'variables.root.result.TestDetail.append(variables.testFile.result.platformResult)'</postExpression>
		</child>
	</child>
</tm>    
