# Example configuration file for the s2ss server

name = "s2ss";		# The name of this node

affinity = 0x02;	# Mask of cores the server should run on
priority = 50;		# Scheduler priority for the server

nodes = {
	acs = {
		id = 1, 			# Device ID
		type = "opal",			# server, workstation, opal, rtds or dsp
		local = "127.0.0.1:10201",	# Local ip:port, use '*' for random port
		remote = "127.0.0.1:10200"
	},
	sintef = {
		id = 2,
		type = "rtds",
		local = "127.0.0.1:10202",
		remote = "127.0.0.1:10203",

		# Network emulation for single nodes
		netem = {
			limit = 99999,		# Limit network emulation to a certain amount of packets
			delay = 100000,		# Additional latency in uS
			jitter = 30000,		# Jitter in uS
			distribution = "normal",# Distribution of delay (uniform, normal, pareto, paretonormal)
			loss = 10		# Loss in percentage
			duplicate = 10,		# Duplication in percentage
			corrupt = 10,		# Corruption in percentage
		}
	}
};

paths = (
	{
		enabled = true,			# Enable this path
		reverse = true,			# Setup a path in the reverse direction too
		in = "acs",			# Name of the node we listen to (see above)
		out = "sintef",			# Name of the node we send to
		rate = 100			# Send message over this path with a fixed (equalized) rate
	}
);
